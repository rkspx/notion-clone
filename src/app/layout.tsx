import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Sidebar, SidebarProps } from "@/components/sidebar";
import { BrainCogIcon, CalendarIcon, FileTextIcon, HelpCircleIcon, HouseIcon, InboxIcon, LayoutTemplateIcon, SearchIcon, SettingsIcon, Trash2Icon } from "lucide-react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const sidebars: SidebarProps = {
    groups: [
        {
            title: "main",
            showTitle: false,
            items: [
                {label: "search", icon: <SearchIcon />},
                {label: "Notion AI", icon: <BrainCogIcon />},
                {label: "Home", icon: <HouseIcon />},
                {label: "Inbox", icon: <InboxIcon />},
            ]
        },
        {
            title: "private",
            showTitle: true,
            items: [
                {label: "Private Page #1", icon: <FileTextIcon />},
                {label: "Private Page #2", icon: <FileTextIcon />},
                {label: "Private Page #3", icon: <FileTextIcon />},
                {label: "Private Page #4", icon: <FileTextIcon />},
                {label: "Private Page #5", icon: <FileTextIcon />},
            ]
        },
        {
            title: "utilities",
            showTitle: false,
            items: [
                {label: "Calendar", icon: <CalendarIcon />, isLink: true},
                {label: "Settings", icon: <SettingsIcon />},
                {label: "Templates", icon: <LayoutTemplateIcon />},
                {label: "Trash", icon: <Trash2Icon />},
                {label: "Help", icon: <HelpCircleIcon />},
            ]
        }
    ]
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <div className="flex flex-row">
            <Sidebar items={sidebars} />
            <main>
                {children}
            </main>
        </div>
      </body>
    </html>
  );
}
